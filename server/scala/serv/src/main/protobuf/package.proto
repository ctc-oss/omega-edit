/**********************************************************************************************************************
 * Copyright (c) 2021 Concurrent Technologies Corporation.                                                            *
 *                                                                                                                    *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance     *
 * with the License.  You may obtain a copy of the License at                                                         *
 *                                                                                                                    *
 *     http://www.apache.org/licenses/LICENSE-2.0                                                                     *
 *                                                                                                                    *
 * Unless required by applicable law or agreed to in writing, software is distributed under the License is            *
 * distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or                   *
 * implied.  See the License for the specific language governing permissions and limitations under the License.       *
 *                                                                                                                    *
 **********************************************************************************************************************/

syntax = "proto3";

import "scalapb/scalapb.proto";

package omega_edit;

option (scalapb.options) = {
  scope: PACKAGE
  
  /* proto3 has *no* notion of required fields, so all fields have default values in the
    generated code. (`optional` affects the output type in Scala, i.e., whether to add an
    `Option`.)

    We can override how this is mapped to Scala by disabling *all* default constructor values,
    which can be annoying for messages with optional values that now need to pass `None`
    explicitly. However, it is better than having default values for required fields, which the
    programmer wouldn't notice are actually required.
  */
  no_default_values_in_constructor: true;
};
