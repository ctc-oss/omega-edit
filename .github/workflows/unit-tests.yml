# Copyright (c) 2021-2022 Concurrent Technologies Corporation.                                                       
#                                                                                                               
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at                                                    
#                                                                                                               
#     http://www.apache.org/licenses/LICENSE-2.0                                                                
#                                                                                                               
# Unless required by applicable law or agreed to in writing, software is distributed under the License is       
# distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or              
# implied.  See the License for the specific language governing permissions and limitations under the License.  

---
name: Unit Tests
on:
  push:
    branches:
      - '**'

env:
  node_version: 14.16.0

jobs:
  macos-node-test:
    name: MacOS Tests
    runs-on: macos-latest
    steps:
      - name: Install Prerequisites
        run: brew install ninja nodeenv yarn
      - name: Checkout Source
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Setup Node
        uses: actions/setup-node@v1.4.6
        with:
          node-version: ${{ env.node_version }}
      - name: Setup Debug Build
        run: cmake -S . -B cmake-build-debug
      - name: Build Debug Build
        run: cmake --build cmake-build-debug
      - name: Run Tests
        working-directory: cmake-build-debug/src/tests/
        run: ./omega_test -d yes --order lex
      - name: Prepare To Build Node v14 Bindings
        run: npm ci
      - name: Test Node v14 Bindings
        run: yarn test
  linux-node-test:
    name: Linux Tests
    runs-on: ubuntu-latest
    steps:
      - name: Install Prerequisites
        run: sudo apt install -y ninja-build nodeenv valgrind yarn
      - name: Checkout Source
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Setup Node
        uses: actions/setup-node@v1.4.6
        with:
          node-version: ${{ env.node_version }}
      - name: Setup Debug Build
        run: cmake -S . -B cmake-build-debug -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS=--coverage -DCMAKE_C_FLAGS=--coverage
      - name: Build Debug Build
        run: cmake --build cmake-build-debug
      - name: Run Tests
        working-directory: cmake-build-debug/src/tests/
        run: ./omega_test -d yes --order lex
      - name: Collect code coverage
        working-directory: cmake-build-debug/src/tests/
        run: bash <(curl -s https://codecov.io/bash)
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - name: Run Tests Under Valgrind
        working-directory: cmake-build-debug/src/tests/
        run: valgrind --leak-check=full --show-leak-kinds=all --leak-resolution=med --track-origins=yes --vgdb=no --error-exitcode=1 ./omega_test -d yes --order lex
      - name: Prepare To Build Node v14 Bindings
        run: npm ci
      - name: Test Node v14 Bindings
        run: yarn test
  windows-node-test:
    name: Windows Tests
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - { sys: mingw64, env: x86_64 }
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Install MinGW
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.sys }}
          update: true
          install: >-
            mingw-w64-${{ matrix.env }}-toolchain
            base-devel
            cmake
            swig
            git

      - name: Checkout Source
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Setup Node
        uses: actions/setup-node@v1.4.6
        with:
          node-version: ${{ env.node_version }}
      - name: Setup Debug Build
        run: cmake -S . -B cmake-build-debug
      - name: Fix cmake-build-debug/CMakeCache.txt for Windows
        run: |
          sed -i "s|^CMAKE_CXX_COMPILER:FILEPATH=.*|CMAKE_CXX_COMPILER:FILEPATH=/mingw64/bin/c++|g" cmake-build-debug/CMakeCache.txt
      - name: Build Debug Build
        run: cmake --build cmake-build-debug
      - name: Run Tests
        working-directory: cmake-build-debug/src/tests/
        run: ./omega_test -d yes --order lex
      - name: Prepare To Build Node v14 Bindings
        run: npm ci
        shell: powershell
      - name: Test Node v14 Bindings
        run: yarn test
        shell: powershell

  scala-test:
    strategy:
      matrix:
        os: [macos-11, ubuntu-20.04]
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2.3.5
        with:
          submodules: true
      - uses: actions/setup-java@v2.5.0
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Run tests
        run: sbt test
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Build
        run: cmake -S . -B cmake-build-debug
      - name: Create omega_test
        run: cmake --build cmake-build-debug --target omega_test
      - name: Run tests
        run: |
          cd cmake-build-debug/src/tests/
          ./omega_test -d yes --order lex
