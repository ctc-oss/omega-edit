# Copyright (c) 2021 Concurrent Technologies Corporation.
#                                                                                                               
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at                                                    
#                                                                                                               
#     http://www.apache.org/licenses/LICENSE-2.0                                                                
#                                                                                                               
# Unless required by applicable law or agreed to in writing, software is distributed under the License is       
# distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or              
# implied.  See the License for the specific language governing permissions and limitations under the License.  

---
name: Unit Tests
on:
  push:
    branches:
      - '**'

jobs:
  build-native:
    strategy:
      matrix:
        # NOTE: build on older OS versions to support older OS versions
        # macos-14 is m1 mac
        # macos-13 not used as it doesn't by default have sbt installed.
        # if macos-12 is updated to 13 SBT needs to be installed before
        # trying to run it for every workflow using this os.
        os: [ windows-2019, macos-12, ubuntu-20.04, macos-14 ]
      fail-fast: false  # don't immediately fail all other jobs if a single job fails
    name: Native build and test on ${{ matrix.os }} 🦙
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Convert runner arch to lower
        shell: bash
        run: |
          echo "runner_arch=$(echo $RUNNER_ARCH | awk '{print tolower($0)}')" >> $GITHUB_ENV

      - name: Build Native ${{ matrix.os }}
        uses: ./.github/workflows/build-native
        with:
          runner-os: ${{ runner.os }}
          os-name: ${{ matrix.os }}-${{ env.runner_arch }}
  
  build-native-linux-arm64:
    name: Native build ubuntu-20.04 arm64 🦙
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Build Native Linux arm64
        uses: ./.github/workflows/build-native-docker
        with:
          os-name: ubuntu-20.04-arm64
          docker-image: ghcr.io/ctc-oss/omega-edit-build-arm64:ubuntu-20.04
          library-filename: libomega_edit.so

  build-middleware:
    needs: [ build-native ]
    strategy:
      matrix:
        # NOTE: build on older OS versions to support older OS versions
        # macos-14 is m1 mac
        # macos-13 not used as it doesn't by default have sbt installed.
        # if macos-12 is updated to 13 SBT needs to be installed before
        # trying to run it for every workflow using this os.
        os: [ windows-2019, macos-12, ubuntu-20.04, macos-14 ]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    name: Build middleware ${{ matrix.os }} 🔧
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
      
      - name: Convert runner arch to lower
        shell: bash
        run: |
          echo "runner_arch=$(echo $RUNNER_ARCH | awk '{print tolower($0)}')" >> $GITHUB_ENV

      - name: Build Middleware ${{ matrix.os }}
        uses: ./.github/workflows/build-middleware
        with:
          runner-os: ${{ runner.os }}
          os-name: ${{ matrix.os }}-${{ env.runner_arch }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

  # TODO: Currently this action fails on sbt installM2 due to a timeout on sbt test 'should listen to session event'
  # build-middleware-linux-arm64:
  #   needs: [ build-native-linux-arm64 ]
  #   runs-on: ubuntu-20.04
  #   name: Build middleware ubuntu-20.04 arm64 🔧
  #   steps:
  #     - name: Checkout 🛎️
  #       uses: actions/checkout@v4
      
  #     - name: Build Middleware ${{ matrix.os }}
  #       uses: ./.github/workflows/build-middleware-docker
  #       with:
  #         os-name: ubuntu-20.04-arm64
  #         docker-image: ghcr.io/ctc-oss/omega-edit-build-arm64:ubuntu-20.04
  #         library-filename: libomega_edit.so
