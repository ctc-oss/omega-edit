# Copyright (c) 2021 Concurrent Technologies Corporation.
#                                                                                                               
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at                                                    
#                                                                                                               
#     http://www.apache.org/licenses/LICENSE-2.0                                                                
#                                                                                                               
# Unless required by applicable law or agreed to in writing, software is distributed under the License is       
# distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or              
# implied.  See the License for the specific language governing permissions and limitations under the License.  

# Build:
#   docker build -t build/ubuntu-20.04/cpp-env:1.0 -f Dockerfile.ubuntu20-cpp-env .

FROM ubuntu:20.04

LABEL maintainer="oss@ctc.com" \
      version="1.1" \
      description="Ubuntu 20.04 with tools for C/C++, Scala, and Node.js development"

ENV DEBIAN_FRONTEND="noninteractive" \
    TZ="America/New_York"

RUN apt-get update && apt-get -y --no-install-recommends install \
  autoconf \
  automake \
  build-essential \
  ca-certificates \
  clang \
  cmake \
  curl \
  dirmngr \
  dos2unix \
  doxygen \
  g++ \
  gcc \
  gdb \
  gnupg \
  gnupg-agent \
  graphviz \
  locales-all \
  make \
  ninja-build \
  openjdk-8-jdk \
  openjdk-8-jre \
  python3 \
  python3-breathe \
  python3-dev \
  python3-pip \
  python3-sphinx \
  rsync \
  scala \
  tar \
  valgrind \
  wget \
  && apt-get clean && rm -rf /var/lib/apt/lists/*

# install sbt
RUN echo "deb https://repo.scala-sbt.org/scalasbt/debian all main" | tee /etc/apt/sources.list.d/sbt.list \
  && echo "deb https://repo.scala-sbt.org/scalasbt/debian /" | tee /etc/apt/sources.list.d/sbt_old.list \
  && curl -sL "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x2EE0EA64E40A89B84B2DF73499E82A75642AC823" \
    | gpg --no-default-keyring --keyring gnupg-ring:/etc/apt/trusted.gpg.d/scalasbt-release.gpg --import \
  && chmod 644 /etc/apt/trusted.gpg.d/scalasbt-release.gpg \
  && apt-get update \
  && apt-get install -y sbt \
  && apt-get clean && rm -rf /var/lib/apt/lists/*

RUN pip3 install \
  sphinx_rtd_theme \
  sphinx-sitemap

RUN apt-get update \
  && mkdir -p /etc/apt/keyrings \
  && curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg \
  && echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_18.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list \
  && apt-get update \
  && apt-get install -y nodejs \
  && apt-get clean && rm -rf /var/lib/apt/lists/*

# Install yarn
RUN npm i -g yarn

# Verify the installation
RUN node --version \
    && npm --version

# Create a non-root user - this breaks CI if trying to use it
# RUN useradd -ms /bin/bash developer \
#     && install -d -m 0755 -o developer -g developer /home/developer/project
# USER developer
# WORKDIR /home/developer/project
