/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.1.0
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_omega_edit_WRAP_H_
#define SWIG_omega_edit_WRAP_H_

struct SwigDirector_SessionOnChangeDirector : public SessionOnChangeDirector, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_SessionOnChangeDirector(JNIEnv *jenv);
    virtual void handle_session_change(omega_session_t const *arg0, omega_change_t const *arg1);
    virtual ~SwigDirector_SessionOnChangeDirector();

public:
    bool swig_overrides(int n) { return (n < 1 ? swig_override[n] : false); }

protected:
    Swig::BoolArray<1> swig_override;
};

struct SwigDirector_OmegaViewportOnChangeDirector : public OmegaViewportOnChangeDirector, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_OmegaViewportOnChangeDirector(JNIEnv *jenv);
    virtual void handle_viewport_change(omega_viewport_t const *arg0, omega_change_t const *arg1);
    virtual ~SwigDirector_OmegaViewportOnChangeDirector();

public:
    bool swig_overrides(int n) { return (n < 1 ? swig_override[n] : false); }

protected:
    Swig::BoolArray<1> swig_override;
};


#endif
