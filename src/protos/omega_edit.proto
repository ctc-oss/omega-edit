/**********************************************************************************************************************
 * Copyright (c) 2021-2022 Concurrent Technologies Corporation.                                                       *
 *                                                                                                                    *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance     *
 * with the License.  You may obtain a copy of the License at                                                         *
 *                                                                                                                    *
 *     http://www.apache.org/licenses/LICENSE-2.0                                                                     *
 *                                                                                                                    *
 * Unless required by applicable law or agreed to in writing, software is distributed under the License is            *
 * distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or                   *
 * implied.  See the License for the specific language governing permissions and limitations under the License.       *
 *                                                                                                                    *
 **********************************************************************************************************************/

syntax = "proto3";

package omega_edit;

option cc_enable_arenas = true;

service Editor {
  rpc CreateSession(SessionRequest) returns (SessionReply);
  rpc DestroySession(ObjectId) returns (Status);
  rpc SubmitChange(ChangeRequest) returns (ChangeReply);
  rpc CreateViewport(ViewportRequest) returns (ViewportReply);
  rpc GetViewportData(ObjectId) returns (DataReply);
  rpc GetChangeDetails(SessionChange) returns (ChangeDetailsReply);
}

service NotificationStreams {
  rpc SubscribeOnChangeSession(ObjectId) returns (stream SessionChange);
  rpc SubscribeOnChangeViewport(SubscribeOnChangeViewportRequest) returns (stream ViewportChange);
}

message ObjectId {
  string id = 1;
}

enum ChangeKind {
  CHANGE_DELETE = 0;
  CHANGE_INSERT = 1;
  CHANGE_OVERWRITE = 3;
}

message ChangeRequest {
  ObjectId session_id = 1;
  ChangeKind kind = 2;
  int64 offset = 3;
  int64 length = 4;
  bytes data = 5;
}

// The RPC framework might already provide status and if so, we can use that instead
message Status {
  enum StatusKind {
    OK = 0;
    ERROR = 1;
  }
  StatusKind kind = 1;
  string message = 2;
}

message ChangeReply {
  Status status = 1;
  ObjectId session_id = 2;
  ObjectId change_id = 3;
}

message ViewportRequest {
  ObjectId session_id = 1;
  int64 capacity = 2;
  int64 offset = 3;
}

message ViewportReply {
  Status status = 1;
  ObjectId session_id = 2;
  ObjectId viewport_id = 3;
}

message DataReply {
  Status status = 1;
  int64 length = 2;
  bytes data = 3;
}

message SessionRequest {
  string file_path = 1;
}

message SessionReply {
  Status status = 1;
  ObjectId session_id = 2;
}

message SubscribeOnChangeViewportRequest {
  ObjectId session_id = 1;
  ObjectId viewport_id = 2;
}

message SessionChange {
  ObjectId session_id = 1;
  ObjectId change_id = 2;
}

message ViewportChange {
  ObjectId viewport_id = 1;
  SessionChange session_change = 2;
}

message ChangeDetailsReply {
  Status status = 1;
  Change change = 2;
}

message Change {
  SessionChange id = 1;
  int64 serial = 2;
  ChangeKind kind = 3;
  int64 offset = 4;
  int64 length = 5;
  bytes data = 6;
}
